@model Projet2_EasyFid.Models.User;
@{
    Layout = "_Layout";
    ViewBag.Title = "Formulaire Utilisateur";
}

<h2>Création d'un profil utilisateur</h2>

@*On crée le début du formulaire ici pour que le même formulaire puisse être utilisé dans le controller Salarie*@
@using (Html.BeginForm("CreateUser", "Admin", FormMethod.Post))
{
    <fieldset>
        <legend>Ajout</legend>
        @Html.Partial("UserPartialForm", Model)

        @Html.Label("Password", "Mot de passe : ")
        @Html.PasswordFor(m => m.Password)
        @Html.ValidationMessageFor(m => m.Password)


        @*Cette boucle permet de récupérer l'ensemble des roles disponibles dans l'enum créé au préalable afin de créer autant de checkbox qu'il y a de role
    L'intéret est qu'en cas de changement dans les enums, le changement se fera automatiquement*@
        @foreach (var item in Enum.GetValues(typeof(Projet2_EasyFid.Data.Enums.RoleTypeEnum)))
        {
            <div>
                <input type="checkbox" name="RoleType" value=@item />
                <label>@item</label>
            </div>
        }

        @Html.Label("JobEnum", "Intitulé du poste : ")
        @*Même logique ici, où cette fois on boucle à l'intérieur d'un <select>
    A chaque tour de boucle, on crée un <option> qui contiendra la valeur actuelle de l'enum
    A la fin, on se retrouve avec autant d'options que de JobEnum, ce qui donnera une liste déroulante*@
        <select name="JobEnum">
            @foreach (var item in Enum.GetValues(typeof(Projet2_EasyFid.Data.Enums.JobEnum)))
            {
                <option name="JobEnum" value=@item>@item</option>
            }
        </select>

        @Html.Label("company", "Entreprise : ")
        @*Le DropDownList utilisé ici se fait grâce à une liste instanciée dans le controller et envoyé à une ViewBag
    Le premier argument de la méthode est le nom qu'aura la liste déroulante dans le html (et ce qu'on récuperera
    dans le controller à la validation du formulaire)
    Le second est une SelectList qui va attendre 3 arguments :
    - La liste entreposée dans la ViewBag.nomDonné
    - La valeur utilisée dans chaque <option> et qui sera récupérée à la validation du formulaire (ici, l'Id)
    - Le nom de l'attribut qui sera affiché dans la liste déroulante'*@
        @Html.DropDownList("company", new SelectList(ViewBag.companies, "Id", "Name"))
        @Html.Label("manager", "Manager : ")
        @Html.DropDownList("manager", new SelectList(ViewBag.userDatas, "Id", "Lastname"))

        <input type="submit" value="Ajouter" class="btn btn-success" />
    </fieldset>
}